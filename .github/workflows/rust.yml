name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
    - name: Rust Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --release && strip target/release/zfs_to_glacier && mv target/release/zfs_to_glacier target/release/zfs_to_glacier_amd64
    - name: Run tests
      run: cargo test -- --test-threads=1
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: zfs_to_glacier_amd64
        path: target/release/zfs_to_glacier_amd64
        retention-days: 5

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
  
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: zfs_to_glacier_amd64
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: zfs_to_glacier_amd64
        asset_name: zfs_to_glacier_amd64
        asset_content_type: application/x-elf
